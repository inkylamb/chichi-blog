(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{534:function(t,e,r){t.exports=r.p+"assets/img/xhr-mock.9d7be32d.png"},558:function(t,e,r){"use strict";r.r(e);var s=r(4),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"xhr-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xhr-mock"}},[t._v("#")]),t._v(" xhr-mock")]),t._v(" "),s("p",[t._v("作为mock 请求非常有效")]),t._v(" "),s("p",[t._v("对于测试和原型设计十分有效，特别是后台还在编写的时候")]),t._v(" "),s("p",[t._v("可以在node 环境和浏览器环境运行. 能够兼容 "),s("strong",[s("a",{attrs:{href:"https://www.npmjs.com/package/axios",target:"_blank",rel:"noopener noreferrer"}},[t._v("Axios"),s("OutboundLink")],1)]),t._v(", "),s("strong",[s("a",{attrs:{href:"https://www.npmjs.com/package/jquery",target:"_blank",rel:"noopener noreferrer"}},[t._v("jQuery"),s("OutboundLink")],1)]),t._v(", "),s("strong",[s("a",{attrs:{href:"https://www.npmjs.com/package/superagent",target:"_blank",rel:"noopener noreferrer"}},[t._v("Superagent"),s("OutboundLink")],1),t._v("甚至其他的库只要是按照")]),s("code",[t._v("XMLHttpRequest")]),t._v("标准 构建的，都没有问题.")]),t._v(" "),s("p",[t._v("安装方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("yarn add --dev xhr-mock\n")])])]),s("p",[t._v("使用的话webpack可以直接import 浏览器环境")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("import mock from 'xhr-mock';\n<script src=\"https://unpkg.com/xhr-mock/dist/xhr-mock.js\"><\/script>\n")])])]),s("p",[t._v("使用列子：")]),t._v(" "),s("p",[t._v("我们比较常用的http请求处理使用的axios 也可以满足使用socket等")]),t._v(" "),s("p",[t._v("下面就是一个简单的列子")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("// mock文件\nimport mock from 'xhr-mock';\n\nconst mockTempleList = [{\ndata:{\n\t\trows: [\n\t\t    {\n\t\t      expand: false,\n\t\t      functionCode: 'HR',\n\t\t      icon: 'fa fa-cubes',\n\t\t      id: 2,\n\t\t      ischecked: null,\n\t\t      score: 10,\n\t\t      shortcutId: null,\n\t\t      text: '组织架构',\n\t\t      url: null,\n\t\t      symbol: '0',\n\t\t      parentId: 125,\n\t\t    },\n\t\t  ],\n\t\t  success: true,\n\t\t  total: 10,\n\t\t},\nrule:/\\/tree.mock/\n}]\n\nexport function setup() {\n  mock.setup();\n  if (mockTempleList.length >= 1) {\n    mockTempleList.map((item) => {\n      const { rule, data } = item;\n      mock.post(rule, {\n        status: 201,\n        body: JSON.stringify(data),\n      });\n    });\n  }\n}\n\nexport const teardown = mock.teardown.bind(mock);\n")])])]),s("p",[t._v("然后建立一个测试文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("import { setup, teardown } from './mock';\n\ndescribe('axios test ', () => {\n  beforeEach(() => {\n    setup();\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    teardown();\n    jest.useRealTimers();\n  });\n\n  it('should input value is equal to one', () => {\n    const { wrapper } = setupByMount();\n    axios\n      .post('/tree.mock', {})\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    jest.advanceTimersByTime(4000);\n    wrapper.update();\n    wrapper.find('.c7n-tree-node-content-wrapper').simulate('click');\n    expect(wrapper.find('NumberField').prop('value')).toBe(1);\n    expect(wrapper).toMatchSnapshot();\n  });\n});\n")])])]),s("p",[t._v("然后运行测试这里可以看出是可以被拦截的")]),t._v(" "),s("p",[s("img",{attrs:{src:r(534),alt:"xhr-mock.png"}})]),t._v(" "),s("h3",{attrs:{id:"api详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api详解"}},[t._v("#")]),t._v(" api详解")]),t._v(" "),s("h3",{attrs:{id:"setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".setup()")])]),t._v(" "),s("p",[t._v("替换全局的 "),s("code",[t._v("XMLHttpRequest")]),t._v(" 的对象变成 "),s("code",[t._v("MockXMLHttpRequest")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"teardown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#teardown"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".teardown()")])]),t._v(" "),s("p",[t._v("重新恢复 "),s("code",[t._v("XMLHttpRequest")]),t._v(" 对象到初始的状态.")]),t._v(" "),s("h3",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".reset()")])]),t._v(" "),s("p",[t._v("移除所有的请求程序")]),t._v(" "),s("h3",{attrs:{id:"get-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".get(url | regex, mock)")])]),t._v(" "),s("p",[t._v("创建一个get请求要求一个url的正则表达式一个mock数据")]),t._v(" "),s("p",[t._v("mock.get(/."),s("em",[s("strong",[s("strong",[t._v(".json")]),t._v("$")]),t._v("/, { body")]),t._v('*😗* JSON.stringify({ data**😗* { id**😗* "abc" } })});')]),t._v(" "),s("h3",{attrs:{id:"post-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".post(url | regex, mock)")])]),t._v(" "),s("p",[t._v("建立一个post请求")]),t._v(" "),s("h3",{attrs:{id:"put-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#put-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".put(url | regex, mock)")])]),t._v(" "),s("p",[t._v("注册一个put请求")]),t._v(" "),s("h3",{attrs:{id:"patch-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patch-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".patch(url | regex, mock)")])]),t._v(" "),s("p",[t._v("注册一个patch 请求")]),t._v(" "),s("h3",{attrs:{id:"delete-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".delete(url | regex, mock)")])]),t._v(" "),s("p",[t._v("注册一个delete 的请求")]),t._v(" "),s("h3",{attrs:{id:"use-method-url-regex-mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-method-url-regex-mock"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".use(method, url | regex, mock)")])]),t._v(" "),s("p",[t._v("注册一个请求拦截所有对相应的url")]),t._v(" "),s("h3",{attrs:{id:"use-fn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-fn"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".use(fn)")])]),t._v(" "),s("p",[t._v("注册一个方法给所有的请求响应")]),t._v(" "),s("h3",{attrs:{id:"error-fn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-fn"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".error(fn)")])]),t._v(" "),s("p",[t._v("抛出异常的钩子响应")]),t._v(" "),s("h2",{attrs:{id:"mockxmlhttprequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mockxmlhttprequest"}},[t._v("#")]),t._v(" "),s("strong",[t._v("MockXMLHttpRequest")])]),t._v(" "),s("h3",{attrs:{id:"method-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#method-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".method() : string")])]),t._v(" "),s("p",[t._v("获取请求信息的方法")]),t._v(" "),s("h3",{attrs:{id:"url-mockurl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url-mockurl"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".url() : MockURL")])]),t._v(" "),s("p",[t._v("获取请求url")]),t._v(" "),s("h3",{attrs:{id:"header-name-string-value-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#header-name-string-value-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".header(name : string, value: string)")])]),t._v(" "),s("p",[t._v("设置请求头")]),t._v(" "),s("h3",{attrs:{id:"header-name-string-string-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#header-name-string-string-null"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".header(name : string) : string | null")])]),t._v(" "),s("p",[t._v("获取请求头")]),t._v(" "),s("h3",{attrs:{id:"headers-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#headers-object"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".headers() : object")])]),t._v(" "),s("p",[t._v("获取所有的头部信息")]),t._v(" "),s("h3",{attrs:{id:"headers-headers-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#headers-headers-object"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".headers(headers : object)")])]),t._v(" "),s("p",[t._v("设置请求的头部信息")]),t._v(" "),s("h3",{attrs:{id:"body-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".body() : string")])]),t._v(" "),s("p",[t._v("获取请求的body")]),t._v(" "),s("h3",{attrs:{id:"body-body-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-body-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".body(body : string)")])]),t._v(" "),s("p",[t._v("社会子请求的body")]),t._v(" "),s("h3",{attrs:{id:"mockresponse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mockresponse"}},[t._v("#")]),t._v(" "),s("strong",[t._v("MockResponse")])]),t._v(" "),s("h3",{attrs:{id:"status-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status-number"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".status() : number")])]),t._v(" "),s("p",[t._v("获取请求状态")]),t._v(" "),s("h3",{attrs:{id:"status-code-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status-code-number"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".status(code : number)")])]),t._v(" "),s("p",[t._v("设置请求状态")]),t._v(" "),s("h3",{attrs:{id:"reason-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reason-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".reason() : string")])]),t._v(" "),s("p",[t._v("获取响应原因")]),t._v(" "),s("h3",{attrs:{id:"reason-phrase-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reason-phrase-string"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".reason(phrase : string)")])]),t._v(" "),s("p",[t._v("设置响应原因")]),t._v(" "),s("h3",{attrs:{id:"header-name-string-value-string-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#header-name-string-value-string-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".header(name : string, value: string)")])]),t._v(" "),s("p",[t._v("设置响应头部")]),t._v(" "),s("h3",{attrs:{id:"header-name-string-string-null-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#header-name-string-string-null-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".header(name : string) : string | null")])]),t._v(" "),s("p",[t._v("获取一个响应头部")]),t._v(" "),s("h3",{attrs:{id:"headers-object-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#headers-object-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".headers() : object")])]),t._v(" "),s("p",[t._v("获取所有的响应头部")]),t._v(" "),s("h3",{attrs:{id:"headers-headers-object-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#headers-headers-object-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".headers(headers : object)")])]),t._v(" "),s("p",[t._v("设置所有响应头部")]),t._v(" "),s("h3",{attrs:{id:"body-string-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-string-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".body() : string")])]),t._v(" "),s("p",[t._v("获取响应body")]),t._v(" "),s("h3",{attrs:{id:"body-body-string-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-body-string-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v(".body(body : string)")])]),t._v(" "),s("p",[t._v("设置响应body")]),t._v(" "),s("p",[t._v("下面列出一些特殊的使用")]),t._v(" "),s("p",[t._v("Upload progress")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("import mock from 'xhr-mock';\n \nmock.setup();\n \nmock.post('/', {});\n \nconst xhr = new XMLHttpRequest();\nxhr.upload.onprogress = event => console.log(event.loaded, event.total);\nxhr.open('POST', '/');\nxhr.setRequestHeader('Content-Length', '12');\nxhr.send('Hello World!');\n")])])]),s("p",[t._v("Download progress")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("import mock from 'xhr-mock';\n \nmock.setup();\n \nmock.get('/', {\n  headers: {'Content-Length': '12'},\n  body: 'Hello World!'\n});\n \nconst xhr = new XMLHttpRequest();\nxhr.onprogress = event => console.log(event.loaded, event.total);\nxhr.open('GET', '/');\nxhr.send();\n")])])]),s("h3",{attrs:{id:"项目处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目处理"}},[t._v("#")]),t._v(" 项目处理")]),t._v(" "),s("p",[t._v("由于无法在项目中使用mockjs 进行拦截测试所以采用这个框架拦截请求然后使用mockjs生成mock数据。这样不但不会影响整个项目的原方式mock也可以满足策测试需要")])])}),[],!1,null,null,null);e.default=a.exports}}]);